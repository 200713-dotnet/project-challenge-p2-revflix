jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build

  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: "revflixkeyvault"
        secrets: '*'

    - uses: actions/checkout@v2.3.1
    - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet tool install --global dotnet-sonarscanner

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: Azure/get-keyvault-secrets@v1.0
        with:
          keyvault: "revflixkeyvault"
          secrets: '*'
          
      - run: | 
          dotnet sonarscanner begin -o:'rennerpa93' -k:'rennerpa93_RevFlix_P2' -d:sonar.login='d37178d6d45f2a5dbeb2f3df129c276b4945e0a0' -d:sonar.host.url='https://sonarcloud.io/'
          dotnet build
          dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
          dotnet sonarscanner end -d:sonar.login='d37178d6d45f2a5dbeb2f3df129c276b4945e0a0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  package-mvc:
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2.3.1
        - run: echo ${DOCKER_TOKEN} | docker login --username ${DOCKER_LOGIN} --password-stdin
        - run: docker image build -f RevFlix.Client/Dockerfile -t revflixp2client .
        - run: docker image tag revflixp2client rennerpa93/revflixp2client
        - run: docker image push rennerpa93/revflixp2client
        - run: docker logout

  package-storing:
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2.3.1
        - run: echo ${DOCKER_TOKEN} | docker login --username ${DOCKER_LOGIN} --password-stdin
        - run: docker image build -f RevFlix.Storing/Dockerfile -t revflixp2storing .
        - run: docker image tag revflixp2storing rennerpa93/revflixp2storing
        - run: docker image push rennerpa93/revflixp2storing
        - run: docker logout

  package-service:
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2.3.1
        - run: echo ${DOCKER_TOKEN} | docker login --username ${DOCKER_LOGIN} --password-stdin
        - run: docker image build -f RevFlix.Service/Dockerfile -t revflixp2service .
        - run: docker image tag revflixp2service rennerpa93/revflixp2service
        - run: docker image push rennerpa93/revflixp2service
        - run: docker logout

  package-angular:
    defaults:
      run:
        working-directory: RevFlixAngular/
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2.3.1
        - run: echo ${DOCKER_TOKEN} | docker login --username ${DOCKER_LOGIN} --password-stdin
        - run: docker image build -f Dockerfile -t revflixp2angular .
        - run: docker image tag revflixp2angular rennerpa93/revflixp2angular
        - run: docker image push rennerpa93/revflixp2angular
        - run: docker logout



name: revflix-pipeline

on:
  push:
    branches:
      - master